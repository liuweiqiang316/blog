import{b as n}from"./app.ff0c9daa.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u624B\u5199promise" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199promise" aria-hidden="true">#</a> \u624B\u5199promise</h1><h3 id="\u5173\u4E8Epromise-\u6211\u4EEC\u9700\u8981\u6E05\u695A" tabindex="-1"><a class="header-anchor" href="#\u5173\u4E8Epromise-\u6211\u4EEC\u9700\u8981\u6E05\u695A" aria-hidden="true">#</a> \u5173\u4E8EPromise\uFF0C\u6211\u4EEC\u9700\u8981\u6E05\u695A\uFF1A</h3><ol><li><p>Promise\u662F\u5426\u51B3\u8BAE\uFF0C\u7531\u5F00\u53D1\u8005\u63A7\u5236</p></li><li><p>\u5F00\u53D1\u8005\u901A\u8FC7\u8C03\u7528\u7531 executor\u51FD\u6570\u8C03\u7528\u7684 resolve/reject \u6765\u63A7\u5236\u5F53\u524Dpromise\u51B3\u8BAE/\u62D2\u7EDD\u7684\u65F6\u673A</p></li><li><p>promise \u7684 resolve/reject \u51FD\u6570\u7684\u8C03\u7528\uFF0C\u662F\u4E00\u4E2A\u72B6\u6001\u53D8\u66F4\u7684\u8FC7\u7A0B\uFF0C\u5373 promise\u72B6\u6001\u7531 pending =&gt; fulfilled/rejected\uFF0C \u6240\u4EE5 resolve/reject \u5185\u90E8\u9996\u5148\u4F1A\u7FFB\u8F6C promise \u7684\u72B6\u6001\uFF0C\u8BBE\u7F6E promise \u7684\u503C/\u62D2\u7EDD\u539F\u56E0\uFF0C \u7136\u540E\u4F1A\u904D\u5386 promise \u51B3\u8BAE\u6210\u529F/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u5217\u8868\uFF0C\u5FAA\u73AF\u8C03\u7528\u5217\u8868\u4E2D\u7684 \u51B3\u8BAE\u6210\u529F/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570</p></li><li><p>promise \u7684 \u51B3\u8BAE\u6210\u529F/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u7531 then/catch \u4F20\u5165\uFF0C\u800C \u51B3\u8BAE\u6210\u529F/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570 \u5185\u90E8\u5E76\u4E0D\u77E5\u9053promise\u662F\u4F55\u65F6\u51B3\u8BAE/\u62D2\u7EDD\uFF0C\u53EA\u80FD\u53CD\u8FC7\u6765\u7531promise\u51B3\u8BAE\u65F6\uFF0C\u53BB\u4E3B\u52A8\u8C03\u7528 \u51B3\u8BAE/\u62D2\u7EDD\u51FD\u6570\u3002</p></li></ol><p><strong>\u5177\u4F53\u5B9E\u73B0\u65B9\u5F0F\uFF1A</strong></p><ol><li>promise \u5185\u90E8\u5148\u5B9A\u4E49\u597D \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u5217\u8868</li><li>then \u51FD\u6570\u6267\u884C\u65F6\uFF0C\u5C06\u63A5\u6536\u7684 \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570 push\u8FDB \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u5217\u8868</li><li>promise \u51B3\u8BAE/\u62D2\u7EDD\u65F6\u5FAA\u73AF\u904D\u5386\u8C03\u7528 \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u5217\u8868 \u5185\u90E8\u7684 \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u5173\u4E8EPromise\uFF0C\u6211\u4EEC\u9700\u8981\u6E05\u695A\uFF1A
 * 1. Promise\u662F\u5426\u51B3\u8BAE\uFF0C\u7531\u5F00\u53D1\u8005\u63A7\u5236
 * 2. \u5F00\u53D1\u8005\u901A\u8FC7\u8C03\u7528\u7531 executor\u51FD\u6570\u8C03\u7528\u7684 resolve/reject \u6765\u63A7\u5236\u5F53\u524Dpromise\u51B3\u8BAE/\u62D2\u7EDD\u7684\u65F6\u673A
 * 3. promise \u7684 resolve/reject \u51FD\u6570\u7684\u8C03\u7528\uFF0C\u662F\u4E00\u4E2A\u72B6\u6001\u53D8\u66F4\u7684\u8FC7\u7A0B
 *    \u5373 promise\u72B6\u6001\u7531 pending =&gt; fulfilled/rejected
 *    \u6240\u4EE5 resolve/reject \u5185\u90E8\u9996\u5148\u4F1A\u7FFB\u8F6C promise \u7684\u72B6\u6001\uFF0C\u8BBE\u7F6E promise \u7684\u503C/\u62D2\u7EDD\u539F\u56E0
 *    \u7136\u540E\u4F1A\u904D\u5386 promise \u51B3\u8BAE\u6210\u529F/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u5217\u8868\uFF0C\u5FAA\u73AF\u8C03\u7528\u5217\u8868\u4E2D\u7684 \u51B3\u8BAE\u6210\u529F/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570
 * 4. promise \u7684 \u51B3\u8BAE\u6210\u529F/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u7531 then/catch \u4F20\u5165\uFF0C
 *    \u800C \u51B3\u8BAE\u6210\u529F/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570 \u5185\u90E8\u5E76\u4E0D\u77E5\u9053promise\u662F\u4F55\u65F6\u51B3\u8BAE/\u62D2\u7EDD\uFF0C\u53EA\u80FD\u53CD\u8FC7\u6765\u7531promise\u51B3\u8BAE\u65F6\uFF0C
 *    \u53BB\u4E3B\u52A8\u8C03\u7528 \u51B3\u8BAE/\u62D2\u7EDD\u51FD\u6570\u3002
 *    \u5177\u4F53\u5B9E\u73B0\u65B9\u5F0F\uFF1A
 *      promise \u5185\u90E8\u5148\u5B9A\u4E49\u597D \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u5217\u8868 
 *      then \u51FD\u6570\u6267\u884C\u65F6\uFF0C\u5C06\u63A5\u6536\u7684 \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570 push\u8FDB \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u5217\u8868
 *      promise \u51B3\u8BAE/\u62D2\u7EDD\u65F6\u5FAA\u73AF\u904D\u5386\u8C03\u7528 \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u5217\u8868 \u5185\u90E8\u7684 \u51B3\u8BAE/\u62D2\u7EDD\u56DE\u8C03\u51FD\u6570
 */</span>
<span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;pending&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">FULFILLED</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;fulfilled&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;rejected&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Promise</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u72B6\u6001</span>
    status <span class="token operator">=</span> <span class="token constant">PENDING</span>
    <span class="token comment">// \u503C</span>
    value <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token comment">// \u62D2\u7EDD\u539F\u56E0</span>
    reason <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token comment">// \u51B3\u8BAE\u6210\u529F\u56DE\u8C03\u51FD\u6570\u5217\u8868</span>
    onSuccessCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment">// \u62D2\u7EDD\u56DE\u8C03\u51FD\u6570\u5217\u8868</span>
    onFailCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">executor</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resolve<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reject<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * \u51B3\u8BAE\u6210\u529F\u51FD\u6570
     * 
     * \u901A\u8FC7 executor \u63D0\u4F9B\u7ED9\u5F00\u53D1\u8005\u5728Promise\u51B3\u8BAE\u6210\u529F\u540E\u8C03\u7528
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>any<span class="token punctuation">}</span></span> <span class="token parameter">data</span> \u51B3\u8BAE\u6210\u529F\u6570\u636E
     */</span>
    <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u5F53\u4E14\u4EC5\u5F53promise\u4E3Apending\u72B6\u6001\uFF0C\u5373\u672A\u51B3\u8BAE\u72B6\u6001\u8C03\u7528
         * \u56E0\u4E3A\u53EA\u6709promise\u51B3\u8BAE\u6210\u529F\u65F6\u624D\u4F1A\u8C03\u7528
         * \u6240\u4EE5\u8FD9\u91CC\u4F1A\u7FFB\u8F6Cpromise\u72B6\u6001\u4E3A\u6210\u529F\uFF0C\u5E76\u8BBE\u7F6Epromise\u7684\u503C
         * \u6700\u540E\u904D\u5386\u6267\u884C \u6210\u529F\u56DE\u8C03\u51FD\u6570\u5217\u8868(onSuccessCallbacks) \u91CC\u9762\u7684\u51FD\u6570
         */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">FULFILLED</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> data
            <span class="token keyword">this</span><span class="token punctuation">.</span>onSuccessCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * \u51B3\u8BAE\u62D2\u7EDD\u51FD\u6570
     * 
     * \u901A\u8FC7 executor \u63D0\u4F9B\u7ED9\u5F00\u53D1\u8005\u5728\u51B3\u8BAE\u5931\u8D25\u540E\u8C03\u7528
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>any<span class="token punctuation">}</span></span> <span class="token parameter">err</span> \u9519\u8BEF\u4FE1\u606F
     */</span>
    <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * \u5F53\u4E14\u4EC5\u5F53promise\u4E3Apending\u72B6\u6001\uFF0C\u5373\u672A\u51B3\u8BAE\u72B6\u6001\u8C03\u7528
         * \u56E0\u4E3A\u53EA\u6709promise\u51B3\u8BAE\u5931\u8D25\u65F6\u624D\u4F1A\u8C03\u7528
         * \u6240\u4EE5\u8FD9\u91CC\u4F1A\u7FFB\u8F6Cpromise\u72B6\u6001\u4E3A\u5931\u8D25\uFF0C\u5E76\u8BBE\u7F6Epromise\u7684\u5931\u8D25\u539F\u56E0
         * \u6700\u540E\u904D\u5386\u6267\u884C \u5931\u8D25\u56DE\u8C03\u51FD\u6570\u5217\u8868(onFailCallbacks) \u91CC\u9762\u7684\u51FD\u6570
         */</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">REJECTED</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> err
            <span class="token keyword">this</span><span class="token punctuation">.</span>onFailCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * then
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">onSuccess</span> \u6210\u529F\u56DE\u8C03
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> <span class="token parameter">onFail</span> \u5931\u8D25\u56DE\u8C03
     * <span class="token keyword">@returns</span> \u4E00\u4E2A\u65B0\u7684promise
     */</span>
    <span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">onSuccess<span class="token punctuation">,</span> onFail</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onSuccessCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">const</span> resolveData <span class="token operator">=</span> <span class="token keyword">typeof</span> onSuccess <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">:</span> data
                    <span class="token function">resolve</span><span class="token punctuation">(</span>resolveData<span class="token punctuation">)</span>

                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onFailCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u6709\u9519\u8BEF\u56DE\u8C03 \u5219resolve\u9519\u8BEF\u56DE\u8C03\u7684\u7ED3\u679C</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> onFail <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">onFail</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        <span class="token comment">// \u65E0\u9519\u8BEF\u56DE\u8C03 \u5219\u76F4\u63A5reject\u9519\u8BEF</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>onSuccessCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>onSuccessCallback<span class="token punctuation">)</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>onFailCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>onFailCallback<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">FULFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">onSuccessCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">onFailCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function-variable function">catch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">errorCallback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onFailCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">queueMicrotask</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">errorCallback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>onFailCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>onFailCallback<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> data
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token function">all</span><span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">let</span> l <span class="token operator">=</span> list<span class="token punctuation">.</span>length

        <span class="token keyword">const</span> <span class="token function-variable function">resultSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span>i <span class="token operator">-</span> b<span class="token punctuation">.</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    item<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> i<span class="token punctuation">,</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>num <span class="token operator">===</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">resultSort</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> i<span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> item <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>num <span class="token operator">===</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">resultSort</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>

        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Promise

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br></div></div>`,6);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
